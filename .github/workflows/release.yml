on:
  push:
    branches:
      - main
    tags:
      - v*

jobs:
  release_build:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup JAVA 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: 17

      - name: Cache Gradle and wrapper
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}

      - name: Install Android SDK
        run: |
          sudo apt-get update
          sudo apt-get install -y lib32stdc++6
          wget https://dl.google.com/android/repository/commandlinetools-linux-6858069_latest.zip
          mkdir -p $ANDROID_HOME/cmdline-tools
          unzip commandlinetools-linux-6858069_latest.zip -d $ANDROID_HOME/cmdline-tools
          yes | $ANDROID_HOME/cmdline-tools/tools/bin/sdkmanager --licenses
          $ANDROID_HOME/cmdline-tools/tools/bin/sdkmanager "build-tools;30.0.3"

      - name: Decode Keystore
        env:
          ENCODED_STRING: ${{ secrets.SIGNING_KEY_STORE_BASE64 }}
        run: |
          echo $ENCODED_STRING > keystore-b64.txt
          base64 -d keystore-b64.txt > /home/runner/work/_temp/keystore.jks
          file /home/runner/work/_temp/keystore.jks
          keytool -list -keystore /home/runner/work/_temp/keystore.jks -storepass ${{ secrets.SIGNING_STORE_PASSWORD }}

      - name: Make gradlew executable
        run: chmod +x ./gradlew
        
      - name: Build Release APKs
        env:
          SIGNING_KEY_STORE_PATH: /home/runner/work/_temp/keystore.jks
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
        run: ./gradlew assembleRelease

      - name: Align Phone APK
        run: $ANDROID_HOME/build-tools/30.0.3/zipalign -v -p 4 app/build/outputs/apk/release/app-release-unsigned.apk app/build/outputs/apk/release/app-release-aligned.apk

      - name: Align Wear OS APK
        run: $ANDROID_HOME/build-tools/30.0.3/zipalign -v -p 4 wear/build/outputs/apk/release/wear-release-unsigned.apk wear/build/outputs/apk/release/wear-release-aligned.apk

      - name: Verify Phone APK Signature
        run: $ANDROID_HOME/build-tools/30.0.3/apksigner verify app/build/outputs/apk/release/app-release-aligned.apk

      - name: Verify Wear OS APK Signature
        run: $ANDROID_HOME/build-tools/30.0.3/apksigner verify wear/build/outputs/apk/release/wear-release-aligned.apk

      - name: Upload Release Builds to Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts
          path: |
            app/build/outputs/apk/release/
            wear/build/outputs/apk/release/

      - name: Extract tag name
        id: extract_tag
        if: startsWith(github.ref, 'refs/tags/')
        run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Find APK files
        run: |
          find . -name "*app-release-aligned.apk" -type f -exec echo "Found file: {}" \;
          find . -name "*wear-release-aligned.apk" -type f -exec echo "Found file: {}" \;

      - name: Create Github Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}
          name: Release ${{ env.TAG_NAME }}
          body: |
            # **Installation files:**
            ## Phone app:
            ### app-release-aligned.apk

            ## Wear OS app:
            ### wear-release-aligned.apk
          generate_release_notes: false
          prerelease: false
          files: |
            ./app/build/outputs/apk/release/TrainingCompanion.apk
            ./wear/build/outputs/apk/release/TrainingCompanionWear.apk
